Method 1:
    - Create a feature space of dimensionality equal to the number of unique items 'm' in the training set.
    - For each of the 'n' users create a vector of size 'm' where position i of vector is equal to the rating the user gave to item i.
    - Not all users will have rating for all items need to set unrated items to some number...
        - Zero
        - 2.5 (middle)
        - mean of their given ratings


Method 2:
    - Get a subset of users who have at least one shared rating to currentUser
    - Calculate the similarity score for each user in this subset using the sim(u1, u2) function
    - Select neighbourhood as the N users with the highest similarity score
    - For each item not rated by currentUser calculate its predicted rating using the pred(currentUser, item) function
    - Return the M items with the highest predicted rating as the recommendations